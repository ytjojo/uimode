/*
 * Copyright (C) 2018 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * Shared file between builds so that they can all use the same dependencies and maven repositories.
 */
def versions = [:]
versions.androidx_appcompat = "1.2.0"
versions.androidx_annotation = "1.1.0"
versions.androidx_recyclerview = "1.1.0"
versions.androidx_fragment = "1.2.5"
versions.androidx_viewpager = "1.0.0"
versions.androidx_constraintlayout = '1.1.3'
versions.androidx_room = '2.2.5'
versions.androidx_legacy = '1.0.0'
versions.androidx_localbroadcastmanager = '1.0.0'
versions.androidx_lifecycle = "2.2.0"
versions.androidx_core = "1.3.1"
versions.androidx_navigation = '2.3.1'
versions.androidx_work = '2.4.0'
versions.android_material = '1.2.0'
versions.kotlin = '1.3.72'
versions.gradle = '3.6.1'
versions.gradle_wrapper = '5.6.4'
versions.glide = "4.3.1"
versions.okhttp = "3.12.6"
versions.gson = "2.8.5"
versions.butterknife = "10.2.3"
versions.swipebacklayout = "1.1.0"
versions.fitwindow = "3.0.0"
versions.decoradapter = "1.0.0"
versions.android_compat = "1.0.0"
versions.permission = "1.0.0"
versions.novoda_bintray = "0.9.2" // 最高支持 gradle-plugin:3.5.4 发布时不能高于此版本

def androidx = [:]
androidx.appcompat = "androidx.appcompat:appcompat:$versions.androidx_appcompat"
androidx.recyclerview = "androidx.recyclerview:recyclerview:$versions.androidx_recyclerview"
androidx.annotation = "androidx.annotation:annotation:$versions.androidx_annotation"
androidx.fragment = "androidx.fragment:fragment:$versions.androidx_fragment"
androidx.viewpager = "androidx.viewpager:viewpager:$versions.androidx_viewpager"
androidx.constraintlayout = "androidx.constraintlayout:constraintlayout:$versions.androidx_constraintlayout"
androidx.room_runtime = "androidx.room:room-runtime:$versions.androidx_room"
androidx.room_compiler = "androidx.room:room-compiler:$versions.androidx_room"
androidx.legacy_v4 = "androidx.legacy:legacy-support-v4:$versions.androidx_legacy"
androidx.localbroadcastmanager = "androidx.localbroadcastmanager:localbroadcastmanager:$versions.androidx_localbroadcastmanager"
androidx.lifecycle_extensions = "androidx.lifecycle:lifecycle-extensions:$versions.androidx_lifecycle"
androidx.core_ktx = "androidx.core:core-ktx:$versions.androidx_core"
androidx.core = "androidx.core:core:$versions.androidx_core"
androidx.navigation_ui = "androidx.navigation:navigation-ui:$versions.androidx_navigation"
androidx.navigation_fragment = "androidx.navigation:navigation-fragment:$versions.androidx_navigation"
androidx.work_runtime = "androidx.work:work-runtime:$versions.androidx_work"

def android = [:]
android.material = "com.google.android.material:material:$versions.android_material"

def arch = [:]
// arch.lifecycle_extensions = "android.arch.lifecycle:extensions:$versions.arch_lifecycle" // 旧被淘汰

def glide = [:]
glide.runtime = "com.github.bumptech.glide:glide:$versions.glide"
glide.compiler = "com.github.bumptech.glide:compiler:$versions.glide"

def butterknife = [:]
butterknife.runtime = "com.jakewharton:butterknife:$versions.butterknife"
butterknife.compiler = "com.jakewharton:butterknife-compiler:$versions.butterknife"

def aliya = [:]
aliya.fitwindow = "com.aliya:fitwindow:$versions.fitwindow"
aliya.decoradapter = "com.aliya:decoradapter:$versions.decoradapter"
aliya.android_compat = "com.aliya:android-compat:$versions.android_compat"
aliya.permission = "com.aliya:permission:$versions.permission"


def deps = [:]
deps.androidx = androidx
deps.android = android
deps.gradle_plugin = "com.android.tools.build:gradle:$versions.gradle"
deps.kotlin_gradle_plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
deps.arch = arch
deps.glide = glide
deps.okhttp = "com.squareup.okhttp3:okhttp:$versions.okhttp"
deps.gson = "com.google.code.gson:gson:$versions.gson"
deps.butterknife = butterknife
deps.swipebacklayout = "me.imid.swipebacklayout.lib:library:$versions.swipebacklayout"
deps.aliya = aliya
deps.novoda_bintray = "com.novoda:bintray-release:$versions.novoda_bintray"
deps.kotlin_stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"

ext.deps = deps

// 默认仓库
def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
}
ext.addRepos = this.&addRepos

// 阿里云仓库
def addAliyunRepos(RepositoryHandler handler) {
    handler.maven { url 'https://maven.aliyun.com/repository/google' }
    handler.maven { url 'https://maven.aliyun.com/repository/jcenter' }
}
ext.addAliyunRepos = this.&addAliyunRepos


def build_versions = [:]
build_versions.min_sdk = 14
build_versions.compile_sdk = 28
build_versions.target_sdk = 28
ext.build_versions = build_versions

 /*
    apply from: 'versions.gradle'
    buildscript {
        repositories {
            addRepos(repositories)
            addAliyunRepos(repositories)
            dependencies {
                classpath deps.gradle_plugin
            }
        }
    }
 */